<%
  def mapping
    {
      's' => 'seconds',
      'm' => 'minutes',
    }
  end

  def multiplier(unit)
    case unit
    when 'minutes' ; 60
    when 'seconds' ; 1
    else           ; 1
    end
  end

  def parse_time(duration)
    # Fixnum is deprecated in Ruby 2.4, so...
    return duration if duration.is_a?(1.class)

    clean  = duration.gsub(/\s/, '')
    digits = clean.to_i
    unit   = mapping[clean.sub("#{digits}", '')]
    digits * multiplier(unit)
  end

  server_count = p('consul.agent.servers.lan').size
  respond_to?(:if_link) && if_link('consul_common') do |consul_link|
    server_count = consul_link.instances.size
  end

  timeout = "60"
  if p("confab.timeout") != nil && !p("confab.timeout").blank?
    timeout = parse_time(p("confab.timeout"))
  end

  if p("consul.client.enabled") == true && server_count > 0
%>
check process consul_agent
  with pidfile /var/vcap/sys/run/consul_agent/consul_agent.pid
  start program "/var/vcap/jobs/consul_agent/bin/agent_ctl_wrapper start"
    with timeout <%= timeout + 10 %> seconds
  stop program "/var/vcap/jobs/consul_agent/bin/agent_ctl stop"
  group vcap
<% end %>

<% if p("consul.agent.mode") == "server" && !p("consul.agent.servers.wan").empty? %>
check process consul-join
  with pidfile /var/vcap/sys/run/consul_agent/consul-join.pid
  start program "/var/vcap/jobs/consul_agent/bin/join_ctl start"
  stop program "/var/vcap/jobs/consul_agent/bin/join_ctl stop"
  group vcap
  depends on consul_agent
<% end %>
